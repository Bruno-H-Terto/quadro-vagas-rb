# Quadro de Vagas

Est√° uma aplica√ß√£o Open Source desenvolvida pelo time da Campus Code e os formandos da turma 13 do TreinaDev.

## Setup

### Organiza√ß√£o

Voc√™ ter√° acesso aos arquivos de desenvolvimento em ambiente Docker na seguinte estrura de pastas:

```
.
‚îî‚îÄ‚îÄ quadro_vagas_rb/
    ‚îú‚îÄ‚îÄ [...]
    ‚îú‚îÄ‚îÄ bin/
    ‚îÇ   ‚îî‚îÄ‚îÄ setup_app.sh
    ‚îú‚îÄ‚îÄ docker/
    ‚îÇ   ‚îú‚îÄ‚îÄ bash_aliases.sh
    ‚îÇ   ‚îî‚îÄ‚îÄ development/
    ‚îÇ       ‚îú‚îÄ‚îÄ Dockerfile
    ‚îÇ       ‚îî‚îÄ‚îÄ tmp/
    ‚îÇ           ‚îî‚îÄ‚îÄ .keep
    ‚îú‚îÄ‚îÄ .dockerignore
    ‚îî‚îÄ‚îÄ docker-compose.development.yml

```
#### Como funciona?

- `bin/setup_app.sh`: Arquivo de script para inicializa√ß√£o da aplica√ß√£o. Respons√°vel pela exclus√£o de arquivos tempor√°rios (pid), cria√ß√£o do banco de dados caso n√£o o possua; execu√ß√£o de migrations e cria√ß√£o de arquivos de log tempor√°rios que assinalam cria√ß√£o do banco e execu√ß√£o do seeds.

- `docker/bash_aliases`: Arquivo de script com aliases para comandos recorrentes no ambiente docker.

- `docker/development/Dockerfile`: Imagem Docker para ambiente de desenvolvimento.

- `.dockerignore`: Arquivo ignore para a constru√ß√£o da imagem.

- `docker-compose.development`: Arquivo compose para desenvolvimento.

### üê≥ Docker Aliases para Desenvolvimento  

Este projeto utiliza Docker para facilitar o ambiente de desenvolvimento. **Al√©m** de seu uso padr√£o, abaixo est√£o alguns atalhos definidos para agilizar comandos recorrentes.  

### üìå Configura√ß√£o Global

‚ÑπÔ∏è  Utilizaremos `$` para representar seu terminal.

Para habilitar os atalhos execute:
```sh
$ source docker/bash_aliases.sh
```
Isso ir√° habilitar na sess√£o atual de seu terminal os seguintes comandos:

#### `BASE`  
Define um alias global para o comando base do Docker Compose:

```sh
alias -g BASE='docker compose -f "docker-compose.development.yml"'
```

```
$ echo BASE
> docker compose -f docker-compose.development.yml
```

Exemplo de uso:

```sh
$ BASE build # Comando de build
$ BASE up -d # Comando de up para nosso container
$ BASE run -it web bash # Executa o bash do container
```

#### `docker-clean`

Fun√ß√£o que remove todos os containers e imagens Docker, al√©m de limpar arquivos tempor√°rios do banco de dados:

```sh
docker-clean(){
  docker stop $(docker ps -aq)
  docker rmi -f $(docker images -aq)
  rm ./docker/development/tmp/.db-created
  rm ./docker/development/tmp/.db-seeded
}
```

#### O que faz?

- Para todos os containers em execu√ß√£o.
- Remove todas as imagens Docker.
- Exclui arquivos tempor√°rios de banco de dados gerados na inicializa√ß√£o do container.


### üöÄ Comandos de Desenvolvimento

`docker-build`
```sh
alias docker-build='BASE build'
```
Compila a imagem Docker do projeto.

`docker-up`
```sh
alias docker-up='BASE up'
Inicia os containers do projeto.
```

`docker-up-d`
```sh
alias docker-up-d='BASE up -d'
```
Inicia os containers em modo desacoplado (background).

`docker-down`
```sh
alias docker-down='BASE down'
```
Para e remove os containers em execu√ß√£o.


`docker-stop`
```sh
alias docker-stop='docker stop $(docker ps -aq)'
```
Para todos os containers ativos.

`docker-rmi`
```sh
alias docker-rmi='docker rmi -f $(docker images -aq)'
```
Remove todas as imagens Docker.

### üéØ Comandos Rails

‚ö†Ô∏è Os comandos a seguir necessitam que o container esteja em funcionamento.

`docker-rails`
```sh
alias docker-rails='BASE exec web bundle exec rails'
```
Executa comandos do Rails dentro do container.
Exemplo:

```sh
docker-rails db:migrate
```
`docker-bundle`
```sh
alias docker-bundle='BASE exec web bundle'
```
Executa comandos do Bundler dentro do container.
Exemplo:

```sh
docker-bundle install
```
`docker-rake`
```sh
alias docker-rake='BASE exec web bundle exec rake'
```
Executa Rake tasks no container.
Exemplo:

```sh
docker-rake db:seed
```
`docker-console`
```sh
alias docker-console='BASE exec web rails console'
```
Abre o Rails console dentro do container.

`docker-rubocop`
```sh
alias docker-rubocop='BASE exec web bundle exec rubocop'
```
Executa o Rubocop para verificar padr√µes de c√≥digo.

`docker-rspec`
```sh
alias docker-rspec='BASE exec web bundle exec rspec'
```
Executa os testes RSpec do projeto.

